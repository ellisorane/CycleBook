[{"C:\\Users\\Orane\\Desktop\\web development\\REACT\\CycleBook\\src\\index.js":"1","C:\\Users\\Orane\\Desktop\\web development\\REACT\\CycleBook\\src\\App.js":"2","C:\\Users\\Orane\\Desktop\\web development\\REACT\\CycleBook\\src\\reportWebVitals.js":"3","C:\\Users\\Orane\\Desktop\\web development\\REACT\\CycleBook\\src\\components\\Navabar\\Navbar.js":"4","C:\\Users\\Orane\\Desktop\\web development\\REACT\\CycleBook\\src\\components\\Feed\\Feed.js":"5","C:\\Users\\Orane\\Desktop\\web development\\REACT\\CycleBook\\src\\components\\data\\feedData.js":"6","C:\\Users\\Orane\\Desktop\\web development\\REACT\\CycleBook\\src\\components\\Marketplace\\Marketplace.js":"7","C:\\Users\\Orane\\Desktop\\web development\\REACT\\CycleBook\\src\\components\\data\\marketplaceData.js":"8","C:\\Users\\Orane\\Desktop\\web development\\REACT\\CycleBook\\src\\components\\PostImg\\PostImg.js":"9"},{"size":517,"mtime":1610311689247,"results":"10","hashOfConfig":"11"},{"size":5416,"mtime":1611883978337,"results":"12","hashOfConfig":"11"},{"size":375,"mtime":1610311689248,"results":"13","hashOfConfig":"11"},{"size":2625,"mtime":1611991133858,"results":"14","hashOfConfig":"11"},{"size":3235,"mtime":1611882850003,"results":"15","hashOfConfig":"11"},{"size":4087,"mtime":1614525705054,"results":"16","hashOfConfig":"11"},{"size":1904,"mtime":1619395719214,"results":"17","hashOfConfig":"11"},{"size":3795,"mtime":1611530770254,"results":"18","hashOfConfig":"11"},{"size":959,"mtime":1611803598019,"results":"19","hashOfConfig":"11"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},"fc6xys",{"filePath":"23","messages":"24","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"25","usedDeprecatedRules":"22"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"30","usedDeprecatedRules":"22"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"33","usedDeprecatedRules":"22"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},"C:\\Users\\Orane\\Desktop\\web development\\REACT\\CycleBook\\src\\index.js",[],["42","43"],"C:\\Users\\Orane\\Desktop\\web development\\REACT\\CycleBook\\src\\App.js",["44"],"import React, { useState } from 'react'\r\nimport {\r\n  BrowserRouter as Router,\r\n  Switch,\r\n  Route\r\n} from \"react-router-dom\"\r\nimport { formatDistance, subDays } from 'date-fns'\r\nimport { nanoid } from 'nanoid'\r\n\r\nimport './App.css'\r\n\r\nimport postData from './components/data/feedData'\r\nimport marketplaceData from './components/data/marketplaceData'\r\nimport Navbar  from './components/Navabar/Navbar'\r\nimport Feed from './components/Feed/Feed'\r\nimport Marketplace from './components/Marketplace/Marketplace'\r\n\r\nconst App = () => {\r\n  //ACCOUNT DROPDOWN LIST USED IN NAV.JS\r\n  const [showAcNav, setShowAcNav] = useState(false)\r\n\r\n  //POSTS STATE\r\n  const [posts, setPosts] = useState(postData)\r\n  // console.log(posts)\r\n\r\n  //USED IN  MARKETPLACE.JS TO RECIEVE MARKETPLACE DATA\r\n  const [marketplacePosts, setMarketplacePosts] = useState(marketplaceData)\r\n\r\n  //MARKETPLACE FILTER\r\n  const [mkCategories, setMkCategoies] = useState(['All', ...new Set(marketplaceData.map(data => data.brand))])\r\n\r\n  //USED FOR COMMENTS IN FEED.JS\r\n  const [currentComment, setComment] = useState('')\r\n\r\n  //HANDLE COMMENT SUBMISSIONS\r\n  const handleSubmitComment = (e, id, comment) => {\r\n    e.preventDefault()\r\n    //CHECK FOR EMPTY INPUT\r\n    if (comment !== '') {\r\n      const newPosts = posts.map(post => {\r\n        if (post.id === id) {\r\n          let updatedPost = {\r\n            ...post,\r\n            comments: [\r\n              {\r\n                id: nanoid(),\r\n                currentUser: true,\r\n                user: 'Anonymous015678',\r\n                comment: comment,\r\n                date: formatDistance(subDays(new Date(), 0), new Date()) + \" ago\"\r\n\r\n              },\r\n              ...post.comments\r\n            ]\r\n          }\r\n          return updatedPost\r\n        }\r\n        return post\r\n      })\r\n      setPosts(newPosts)\r\n      setComment('')\r\n    }\r\n  }\r\n\r\n  const deleteComment = (id) => {\r\n    console.log(\"Current id: \" + id)\r\n  }\r\n\r\n  //LIKES AND DISLIKES IN FEED.JS\r\n  const handleLikes = (id) => {\r\n    const newPosts = posts.map(post => {\r\n      if (post.id === id) {\r\n        let updatedPost = {\r\n          ...post,\r\n          reactions: {\r\n            clicked: true,\r\n            likes: post.reactions.likes + 1\r\n          }\r\n        }\r\n        return updatedPost\r\n      }\r\n      return post\r\n    })\r\n\r\n    setPosts(newPosts)\r\n  }\r\n\r\n  //FILTER ITEMS IN MARKETPLACE BY BRAND IN MARKETPLACE.JS\r\n  const mkFilter = (category) => {\r\n    if(category === 'All') {\r\n      setMarketplacePosts(marketplaceData)\r\n      return marketplaceData\r\n    }\r\n\r\n    const filteredMk = marketplaceData.filter(data => data.brand === category)\r\n    setMarketplacePosts(filteredMk)\r\n    return marketplacePosts\r\n  }\r\n\r\n  // IMAGE SLIDER FUNCTION IN ALL COMPONENTS WITH MULTIPLE IMAGES\r\n  const changeImg = (postData, dir, id) => {\r\n    //CREATE A NEW SET OF POSTS BY COPYING THE OLD POSTS STATES\r\n    const newPosts = postData.map(post => {\r\n      //IF THE CURRENT ID MATCHES THE ID IN THE DATA, UPDATE THAT POST'S IMGINDEX BY INCREMENTS OF 1\r\n      if (post.id === id) {\r\n        if (dir === 'next') {\r\n          let updatedPost = {\r\n            ...post,\r\n            imgIndex: post.imgIndex + 1\r\n          }\r\n          //RESET THE IMGINDEX TO 0 IF IT EXCEEDS THE IMG ARRAY LENGTH\r\n          if (dir === 'next' && post.imgIndex > post.img.length - 2) {\r\n            updatedPost = {\r\n              ...post,\r\n              imgIndex: 0\r\n            }\r\n          }\r\n          return updatedPost\r\n        }\r\n        //UPDATE THE POST'S IMGINDEX BY DECREMENTS OF 1\r\n        if (dir === 'prev') {\r\n          let updatedPost = {\r\n            ...post,\r\n            imgIndex: post.imgIndex - 1\r\n          }\r\n          //SET THE IMGINDEX TO SHOW THE LAST IMG\r\n          if (dir === 'prev' && post.imgIndex < 1) {\r\n            updatedPost = {\r\n              ...post,\r\n              imgIndex: post.img.length - 1\r\n            }\r\n          }\r\n          return updatedPost\r\n        }\r\n        \r\n      }\r\n      return post\r\n    })\r\n\r\n    if (postData === marketplacePosts) {\r\n      return setMarketplacePosts(newPosts)\r\n    }\r\n    if (postData === posts) {\r\n     return setPosts(newPosts)\r\n    }\r\n  }\r\n  \r\n  //HIDE INDIVIDUAL USER POSTS\r\n  const hidePost = (id) => {\r\n    const unhiddenPosts = posts.filter(post => post.id !== id)\r\n    setPosts(unhiddenPosts)\r\n  }\r\n\r\n  //REFRESH THE PAGE AFTER ALL POSTS ARE HIDDEN\r\n  const refreshFeed = () => {\r\n    setPosts(postData)\r\n  }\r\n\r\n  let feed = <Feed\r\n    posts={posts}\r\n    hidePost={hidePost}\r\n    changeImg={changeImg}\r\n    handleLikes={handleLikes}\r\n    currentComment={currentComment}\r\n    setComment={setComment}\r\n    handleSubmitComment={handleSubmitComment}\r\n    deleteComment={deleteComment} />\r\n\r\n  if (posts.length === 0) {\r\n      feed = <button onClick={refreshFeed} className=\"refreshFeed btn\">Refresh Feed</button>\r\n  }\r\n\r\n  return (\r\n    <Router>\r\n      <div className=\"App\">\r\n        <Navbar showAcNav={showAcNav} setShowAcNav={setShowAcNav} />\r\n        <Switch>\r\n          <Route path=\"/marketplace\">\r\n            <Marketplace\r\n              marketplacePosts={marketplacePosts}\r\n              changeImg={changeImg}\r\n              mkFilter={mkFilter}\r\n              mkCategories={mkCategories} />\r\n          </Route>\r\n          \r\n          <Route path=\"/\">\r\n            {feed}\r\n          </Route>\r\n        </Switch>\r\n      </div>\r\n    </Router>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","C:\\Users\\Orane\\Desktop\\web development\\REACT\\CycleBook\\src\\reportWebVitals.js",[],"C:\\Users\\Orane\\Desktop\\web development\\REACT\\CycleBook\\src\\components\\Navabar\\Navbar.js",["45"],"import React from 'react'\r\nimport { NavLink } from \"react-router-dom\";\r\n\r\nimport styles from './Navbar.module.css'\r\n\r\nconst Navbar = ({showAcNav, setShowAcNav}) => {\r\n  // return (\r\n  //   <nav>\r\n  //     <div className={styles.navWrapper}>\r\n  //       <h1><NavLink className={styles.navBrand} exact to=\"/\">CycleBooK</NavLink></h1>\r\n  //       <ul>\r\n  //         <li><NavLink className={styles.navLink} activeClassName={styles.active} exact to=\"/\">Feed</NavLink></li>\r\n  //         <li><NavLink className={styles.navLink} activeClassName={styles.active} exact to=\"/messages\">Messages</NavLink></li>\r\n  //         <li><NavLink className={styles.navLink} activeClassName={styles.active} exact to=\"/marketplace\">Marketplace</NavLink></li>\r\n  //       </ul>\r\n  //       <ul>\r\n  //         <div className={styles.acDiv}>\r\n  //           <li className={styles.navLink} onClick={() => setShowAcNav(!showAcNav)}>Account</li>\r\n  //           {/* SHOW THE BELOW INFO ONLY IF THE showAcNav STATE IS TRUE */}\r\n  //           {\r\n  //             showAcNav ? \r\n  //             <ul className={styles.acDropdown}>\r\n  //               <li><NavLink className={styles.navLink} activeClassName={styles.active} exact to=\"/profile\">Profile</NavLink></li>\r\n  //               <li><NavLink className={styles.navLink} activeClassName={styles.active} exact to=\"/posts\">Posts</NavLink></li>\r\n  //               <li><NavLink className={styles.navLink} activeClassName={styles.active} exact to=\"/settings\">Settings</NavLink></li>\r\n  //               <li><NavLink className={styles.navLink} activeClassName={styles.active} exact to=\"/help\">Help</NavLink></li>\r\n  //             </ul> : null\r\n  //           }\r\n  //         </div>\r\n  //         <li><NavLink className={styles.navLink} exact to=\"/logout\">Logout</NavLink></li>\r\n  //       </ul>\r\n  //     </div>\r\n  //   </nav>\r\n  // )\r\n  return (\r\n    <nav className={styles.navbar}>\r\n      <div className={styles.navBrand}><NavLink className={styles.navBrand} exact to=\"/\">CycleBooK 🏍</NavLink></div>\r\n      <a href=\"#\" className={styles.toggleNav}>\r\n        <span className={styles.bar}></span>\r\n        <span className={styles.bar}></span>\r\n        <span className={styles.bar}></span>\r\n      </a>\r\n      <div className={styles.navLinks}>\r\n        <ul>\r\n          <li><NavLink className={styles.navLink} exact to=\"/\">Feed</NavLink></li>\r\n          <li><NavLink className={styles.navLink} exact to=\"/marketplace\">Marketplace</NavLink></li>\r\n          <li><NavLink className={styles.navLink} exact to=\"/\">Messages</NavLink></li>\r\n        </ul>\r\n      </div>\r\n    </nav>\r\n  )\r\n}\r\n\r\nexport default Navbar","C:\\Users\\Orane\\Desktop\\web development\\REACT\\CycleBook\\src\\components\\Feed\\Feed.js",["46"],"import React, {useState} from 'react'\r\nimport ReadMoreAndLess from 'react-read-more-less'\r\nimport { GrLike } from 'react-icons/gr'\r\nimport { MdDelete } from 'react-icons/md'\r\n\r\nimport PostImg from '../PostImg/PostImg'\r\nimport styles from './Feed.module.css'\r\n\r\n\r\nconst Feed = ({ posts, hidePost, changeImg, handleLikes, handleSubmitComment, currentComment, setComment, deleteComment }) => {\r\n\r\n  return (\r\n    <div>\r\n      {posts.map((post) => {\r\n        const { id, username, userImg, img, imgIndex, title, content, reactions, comments, date } = post;\r\n\r\n        return (\r\n          <div key={id} className={styles.userPost}>\r\n            <div className={styles.hideAndLike}>\r\n              <button onClick={() => handleLikes(id)} className={styles.like} disabled={reactions.clicked ? true : false}> <GrLike /> <span>{reactions.clicked ? 'Liked' : 'Likes'} {reactions.likes}</span> </button>\r\n              <button onClick={() => hidePost(id)} className={styles.hidePost}>Hide 🚫</button>\r\n            </div>\r\n\r\n            <PostImg id={id} img={img} changeImg={changeImg} imgIndex={imgIndex} postData={posts} />\r\n\r\n            <h2>{title}</h2>\r\n            \r\n              {/* ONLY SHOW A PORTION OF THE CONTENT IF IT OS MORE THAN 180 CHARS */}\r\n              <ReadMoreAndLess\r\n                className=\"read-more-content\"\r\n                charLimit={180}\r\n                readMoreText=\"Read more\"\r\n                readLessText=\" Read less\"\r\n              >\r\n                {content}\r\n              </ReadMoreAndLess>\r\n            <div className={styles.commentDiv}>\r\n              <hr/>\r\n              <p>Comments</p>\r\n              <form onSubmit={(e) => handleSubmitComment(e, id, currentComment)}>\r\n                <textarea onChange={(e) => setComment(e.target.value)} value={currentComment} className={styles.commentInput} /><br/>\r\n                <button className=\"btn\">Submit</button>\r\n              </form>\r\n              {comments.map((comm, index) => {\r\n                return <div key={index} className={styles.comments}>\r\n                  <div className={styles.leftDiv}>\r\n                    <strong>{comm.user} :</strong>\r\n                    <ReadMoreAndLess\r\n                      className=\"read-more-content\"\r\n                      charLimit={140}\r\n                      readMoreText=\"Read more\"\r\n                      readLessText=\" Read less\"\r\n                    >\r\n                    {comm.comment}\r\n                    </ReadMoreAndLess>\r\n                    <p className={styles.commentDate}>{comm.date}</p>\r\n                  </div>\r\n                  <div className={styles.rightDiv}>\r\n                    {/* IF THE USER IS THE CURRENT USER ADD A DELETE BUTTON  */}\r\n                    {comm.currentUser ? <button onClick={() => deleteComment(comm.id)} className={styles.dltComment}><MdDelete /></button> : null}\r\n                  </div>\r\n                </div>\r\n              })}\r\n            </div>\r\n            <div className={styles.userInfo}>\r\n              <p>{username}</p>\r\n              <img src={userImg} alt={username} className={styles.userImage} />\r\n              <p>{date}</p>\r\n            </div>\r\n          </div>\r\n        )\r\n      })}\r\n    </div>\r\n    );\r\n}\r\n\r\nexport default Feed","C:\\Users\\Orane\\Desktop\\web development\\REACT\\CycleBook\\src\\components\\data\\feedData.js",[],"C:\\Users\\Orane\\Desktop\\web development\\REACT\\CycleBook\\src\\components\\Marketplace\\Marketplace.js",[],"C:\\Users\\Orane\\Desktop\\web development\\REACT\\CycleBook\\src\\components\\data\\marketplaceData.js",[],"C:\\Users\\Orane\\Desktop\\web development\\REACT\\CycleBook\\src\\components\\PostImg\\PostImg.js",[],{"ruleId":"47","replacedBy":"48"},{"ruleId":"49","replacedBy":"50"},{"ruleId":"51","severity":1,"message":"52","line":30,"column":24,"nodeType":"53","messageId":"54","endLine":30,"endColumn":38},{"ruleId":"55","severity":1,"message":"56","line":38,"column":7,"nodeType":"57","endLine":38,"endColumn":48},{"ruleId":"51","severity":1,"message":"58","line":1,"column":16,"nodeType":"53","messageId":"54","endLine":1,"endColumn":24},"no-native-reassign",["59"],"no-negated-in-lhs",["60"],"no-unused-vars","'setMkCategoies' is assigned a value but never used.","Identifier","unusedVar","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","'useState' is defined but never used.","no-global-assign","no-unsafe-negation"]